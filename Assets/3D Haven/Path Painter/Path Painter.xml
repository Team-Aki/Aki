<?xml version="1.0" ?><doc>
    <assembly>
        <name>Path Painter</name>
    </assembly>
    <members>
        <member name="T:PathPainterAPI.Painter">
            <summary>
            Path Painter Painter API
            </summary>
            <summary>
            Path Painter Painter API
            </summary>
        </member>
        <member name="T:PathPainterAPI.Painter.EmbankmentCurve">
            <summary>
            Embankment Curve that determines how the path blends into the environment.
            </summary>
        </member>
        <member name="T:PathPainterAPI.Painter.Noise">
            <summary>
            Noise types.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.size">
            <summary>
            Width of the path without its embankment.
            </summary>
        </member>
        <member name="P:PathPainterAPI.Painter.embankmentSize">
            <summary>
            Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.elevation">
            <summary>
            Relative elevation of the path. Negative values can be used to carve into the terrain.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.embankCurve">
            <summary>
            Embankment Curve that determines how the path blends into the environment.
            </summary>
        </member>
        <member name="P:PathPainterAPI.Painter.evenRamp">
            <summary>
            [0-1 Normalized]; 
              0: follow terrain; 
              1: the ramp slope will be even from start to end.
            </summary>
        </member>
        <member name="P:PathPainterAPI.Painter.textureStrength">
            <summary>
            [0-1 Normalized] Strength of the texture painting.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.texture">
            <summary>
            TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.embankmentTexture">
            <summary>
            TerrainLayer to be used for the embankment. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.smartTexturePaint">
            <summary>
            Disable if Embankment painting is desired over areas with Path surface texture.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.clearGrass">
            <summary>
            Clear/thin Terrain Details (grass, flowers, etc.) when drawing paths according to the settings: <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.
            </summary>
        </member>
        <member name="P:PathPainterAPI.Painter.grassClearingDistance">
            <summary>
            [Value 0.01-1] Terrain Details (grass, flowers, etc.) clearing distance ratio (ratio of one side-embankment width). Grass will be cleared up to this distance.
            </summary>
        </member>
        <member name="P:PathPainterAPI.Painter.grassThinningDistance">
            <summary>
            [0.01-1 Normalized] Terrain Details (grass, flowers, etc.) thinning distance ratio (ratio of one side-embankment width).
            Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.grassClearingNoise">
            <summary>
            The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.) Thinning.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.clearTree">
            <summary>
            Clear trees when drawing paths according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.
            </summary>
        </member>
        <member name="P:PathPainterAPI.Painter.treeClearingDistance">
            <summary>
            [0.01-1 Normalized] Tree clearing distance ratio (ratio of one side-embankment width). Trees will be cleared up to this distance.
            </summary>
        </member>
        <member name="F:PathPainterAPI.Painter.smoothPath">
            <summary>
            Paint smooth paths when enabled.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.SetDefaults">
            <summary>
            Reset the Default options/settings.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint(System.Collections.Generic.List{UnityEngine.Vector3},System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the <see cref="T:PathPainterAPI.Painter"/> settings and Paint a Path with Y positions relative to the terrain 
            surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain 
            distance)</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Relative elevation of the path. Negative values can be used to carve into the terrain.</param>
            <param name="evenRamp">[0-1 Normalized]; 
             0: follow terrain; 
             1: the ramp slope will be even from start to end.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles 
            by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain 
            tiles by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings: <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.) Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width). Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint(UnityEngine.Vector3[],System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the <see cref="T:PathPainterAPI.Painter"/> settings and Paint a Path with Y positions relative to the terrain 
            surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain 
            distance)</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Relative elevation of the path. Negative values can be used to carve into the terrain.</param>
            <param name="evenRamp">[0-1 Normalized]; 
             0: follow terrain; 
             1: the ramp slope will be even from start to end.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles 
            by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain 
            tiles by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings: <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.) Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width). Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint(System.Collections.Generic.List{UnityEngine.Vector3},PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path using the current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>. Path Y positions
            will be relative to the terrain surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint(UnityEngine.Vector3[],PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path using the current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>. Path Y positions
            will be relative to the terrain surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint(System.Collections.Generic.List{UnityEngine.Vector3})">
            <summary>
            Uses the current <see cref="T:PathPainterAPI.Painter"/> settings and paint a Path with Y positions relative to the terrain 
            surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored.
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint(UnityEngine.Vector3[])">
            <summary>
            Uses the current <see cref="T:PathPainterAPI.Painter"/> settings and paint a Path with Y positions relative to the terrain surface according
            to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored.
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the relevant <see cref="T:PathPainterAPI.Painter"/> settings and paint a Path with explicit Y positions (i.e. the path surface
            will follow the <paramref name="points"/> in 3D).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Path elevation relative to the <paramref name="points"/> provided.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings:
            <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio
            (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio
            (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.)
            Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width).
            Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint3D(UnityEngine.Vector3[],System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the relevant <see cref="T:PathPainterAPI.Painter"/> settings and paint a Path with explicit Y positions (i.e. the path surface
            will follow the <paramref name="points"/> in 3D).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Path elevation relative to the <paramref name="points"/> provided.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings:
            <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio
            (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio
            (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.)
            Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width).
            Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint3D(System.Collections.Generic.List{UnityEngine.Vector3},PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>.
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint3D(UnityEngine.Vector3[],PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>.
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint3D(System.Collections.Generic.List{UnityEngine.Vector3})">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings.
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Paint3D(UnityEngine.Vector3[])">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings.
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)">
            <summary>
            Use bulk painting to avoid prep and Unity's terrain sync overheads. Usage: <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/>;
            BulkPaint(); ... BulkPaint3D(); <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>;
            </summary>
            <param name="startPoint">World Space position used to select terrain tiles to be painted on 
            (tile at this position and surrounding tiles that are compatible with it). 
            First point of the first path can be used.</param>
            <returns>Returns false if unable to lock on the target terrain tiles or of they are missing terrain 
            elements.</returns>
        </member>
        <member name="M:PathPainterAPI.Painter.EndBulkPaint">
            <summary>
            Use bulk painting to avoid prep and Unity's terrain sync overheads. Usage: <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/>;
            BulkPaint3D(); ... BulkPaint(); <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>;
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint(System.Collections.Generic.List{UnityEngine.Vector3},System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the <see cref="T:PathPainterAPI.Painter"/> settings and paint a path with Y positions relative to the terrain 
            surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain 
            distance)</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Relative elevation of the path. Negative values can be used to carve into the terrain.</param>
            <param name="evenRamp">[0-1 Normalized]; 
             0: follow terrain; 
             1: the ramp slope will be even from start to end.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles 
            by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain 
            tiles by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings: <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.) Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width). Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint(UnityEngine.Vector3[],System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the <see cref="T:PathPainterAPI.Painter"/> settings and paint a path with Y positions relative to the terrain 
            surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain 
            distance)</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Relative elevation of the path. Negative values can be used to carve into the terrain.</param>
            <param name="evenRamp">[0-1 Normalized]; 
             0: follow terrain; 
             1: the ramp slope will be even from start to end.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles 
            by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain 
            tiles by their index: layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings: <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.) Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width). Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint(System.Collections.Generic.List{UnityEngine.Vector3},PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path using the current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>. Path Y positions
            will be relative to the terrain surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint(UnityEngine.Vector3[],PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path using the current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>. Path Y positions
            will be relative to the terrain surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored. 
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint(System.Collections.Generic.List{UnityEngine.Vector3})">
            <summary>
            Uses the current <see cref="T:PathPainterAPI.Painter"/> settings and paint a Path with Y positions relative to the terrain 
            surface according to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored.
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint(UnityEngine.Vector3[])">
            <summary>
            Uses the current <see cref="T:PathPainterAPI.Painter"/> settings and paint a Path with Y positions relative to the terrain surface according
            to the <see cref="P:PathPainterAPI.Painter.evenRamp"/> and <see cref="F:PathPainterAPI.Painter.elevation"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points of the path to be painted. Note: Y values are ignored.
            (similar to how mouse movement could be used by recording a point every time the mouse moves a certain distance)</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint3D(System.Collections.Generic.List{UnityEngine.Vector3},System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the relevant <see cref="T:PathPainterAPI.Painter"/> settings and paint a path with explicit Y positions (i.e. the path surface
            will follow the <paramref name="points"/> in 3D).
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Path elevation relative to the <paramref name="points"/> provided.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings:
            <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio
            (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio
            (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.)
            Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width).
            Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint3D(UnityEngine.Vector3[],System.Single,System.Single,PathPainterAPI.Painter.EmbankmentCurve,System.Boolean,System.Single,System.Single,UnityEngine.TerrainLayer,UnityEngine.TerrainLayer,System.Boolean,System.Boolean,System.Single,System.Single,PathPainterAPI.Painter.Noise,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Change all the relevant <see cref="T:PathPainterAPI.Painter"/> settings and paint a path with explicit Y positions (i.e. the path surface
            will follow the <paramref name="points"/> in 3D).
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="size">Width of the path without its embankment.</param>
            <param name="embankmentSize">Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.</param>
            <param name="embankmentCurve">Embankment Curve that determines how the path blends into the environment.</param>
            <param name="shaping">If <see langword="true"/>, output height.</param>
            <param name="elevation">Path elevation relative to the <paramref name="points"/> provided.</param>
            <param name="textureStrength">[Value 0-1] Strength of the texture painting.</param>
            <param name="texture">TerrainLayer to be used for the path surface. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="embankmentTexture">TerrainLayer to be used for the embankment. Tip: You can get layers of terrain tiles by their index: 
            layer = tile.terrainData.terrainLayers[index];</param>
            <param name="smartTexturePaint">Disable if Embankment painting is desired over areas with Path surface texture.</param>
            <param name="clearGrass">Clear/thin Terrain Details (grass, flowers, etc.) according to the settings:
            <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/>, <see cref="P:PathPainterAPI.Painter.grassThinningDistance"/>, <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/>.</param>
            <param name="grassClearingDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Clearing distance ratio
            (ratio of one side-embankment width). Grass will be cleared up to this distance.</param>
            <param name="grassThinningDistance">[Value 0.01-1] Terrain Details (grass, flowers, etc.) Thinning distance ratio
            (ratio of one side-embankment width). Grass will be thinned with <see cref="F:PathPainterAPI.Painter.grassClearingNoise"/> applied from the <see cref="P:PathPainterAPI.Painter.grassClearingDistance"/> up to this distance.</param>
            <param name="grassClearingNoise">The type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details (grass, flowers, etc.)
            Thinning.</param>
            <param name="clearTree">Clear trees according to the settings: <see cref="P:PathPainterAPI.Painter.treeClearingDistance"/>.</param>
            <param name="treeClearingDistance">[Value 0.01-1] Tree Clearing distance ratio (ratio of one side-embankment width).
            Trees will be cleared up to this distance.</param>
            <param name="smoothPath">Paint smooth paths when enabled.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint3D(System.Collections.Generic.List{UnityEngine.Vector3},PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint3D(UnityEngine.Vector3[],PathPainterAPI.PaintOption[])">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings while optionally changing any settings as desired.
            Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods to pass in <paramref name="options"/>.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
            <param name="options">An optional list of <see cref="T:PathPainterAPI.PaintOption"/> that specify the painting properties.
            Any values passed in here will change the presets. Use <seealso cref="T:PathPainterAPI.PaintOption"/> static methods.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint3D(System.Collections.Generic.List{UnityEngine.Vector3})">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.BulkPaint3D(UnityEngine.Vector3[])">
            <summary>
            Paint a Path with explicit Y positions (i.e. the path surface will follow the <paramref name="points"/> in 3D) using the
            current <see cref="T:PathPainterAPI.Painter"/> settings.
            MUST BE PART OF A BULK (that starts with <seealso cref="M:PathPainterAPI.Painter.StartBulkPaint(UnityEngine.Vector3)"/> and ends with 
            <seealso cref="M:PathPainterAPI.Painter.EndBulkPaint"/>).
            </summary>
            <param name="points">Worlds Space points for the path to follow.</param>
        </member>
        <member name="M:PathPainterAPI.Painter.Size(System.Single)">
            <summary>
            Option passed to the Path Painter API to set the 
            Width of the path without its embankment.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.EmbankmentSize(System.Single)">
            <summary>
            Option passed to the Path Painter API to set the 
            Width of the whole path including the embankment. Cannot be less than the <see cref="F:PathPainterAPI.Painter.size"/>.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.Elevation(System.Single)">
            <summary>
            Option passed to the Path Painter API to set the 
            Relative elevation of the path. Negative values can be used to carve into the terrain.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.EmbankCurve(PathPainterAPI.Painter.EmbankmentCurve)">
            <summary>
            Option passed to the Path Painter API to set the 
            Embankment Curve that determines how the path blends into the environment.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.EvenRamp(System.Single)">
            <summary>
            Option passed to the Path Painter API to set the EvenRamp value.
            [Value 0-1];
             0: follow terrain;
             1: the ramp slope will be even from start to end.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.TextureStrength(System.Single)">
            <summary>
            [Value 0-1] Option passed to the Path Painter API to set the Strength of the texture painting.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.Texture(UnityEngine.TerrainLayer)">
            <summary>
            Option passed to the Path Painter API to set the TerrainLayer to be used for the path surface. Tip: 
            You can get layers of terrain tiles by their index: layer = tile.terrainData.terrainLayers[index];
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.EmbankmentTexture(UnityEngine.TerrainLayer)">
            <summary>
            Option passed to the Path Painter API to set the TerrainLayer to be used for the embankment. Tip: 
            You can get layers of terrain tiles by their index: layer = tile.terrainData.terrainLayers[index];
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.SmartTexturePaint(System.Boolean)">
            <summary>
            Option passed to the Path Painter API to set Smart Texture Paint. 
            Disable if Embankment painting is desired over areas with Path surface texture.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.ClearGrass(System.Boolean)">
            <summary>
            Option passed to the Path Painter API to enable/disable Clearing/thinning of Terrain Details (grass, flowers, etc.) when 
            drawing paths according to the settings: <see cref="M:PathPainterAPI.Painter.GrassClearingDistance(System.Single)"/>, <see cref="M:PathPainterAPI.Painter.GrassThinningDistance(System.Single)"/>, 
            <see cref="M:PathPainterAPI.Painter.GrassClearingNoise(PathPainterAPI.Painter.Noise)"/>.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.GrassClearingDistance(System.Single)">
            <summary>
            [Value 0.01-1] Option passed to the Path Painter API to set the Terrain Details (grass, flowers, etc.) clearing distance 
            ratio (ratio of one side-embankment width). Grass will be cleared up to this distance.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.GrassThinningDistance(System.Single)">
            <summary>
            [Value 0.01-1] Option passed to the Path Painter API to set the Terrain Details (grass, flowers, etc.) thinning distance
            ratio (ratio of one side-embankment width). Grass will be thinned with <see cref="M:PathPainterAPI.Painter.GrassClearingNoise(PathPainterAPI.Painter.Noise)"/> applied from the
            <see cref="M:PathPainterAPI.Painter.GrassClearingDistance(System.Single)"/> up to this distance.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.GrassClearingNoise(PathPainterAPI.Painter.Noise)">
            <summary>
            Option passed to the Path Painter API to set the type of <see cref="T:PathPainterAPI.Painter.Noise"/> applied to Terrain Details
            (grass, flowers, etc.) Thinning.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.ClearTree(System.Boolean)">
            <summary>
            Option passed to the Path Painter API to enable/disable Tree Clearing when drawing paths according to the settings:
            <see cref="M:PathPainterAPI.Painter.TreeClearingDistance(System.Single)"/>.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.TreeClearingDistance(System.Single)">
            <summary>
            [Value 0.01-1] Option passed to the Path Painter API to set the tee clearing distance ratio (ratio of one side-embankment
            width). Trees will be cleared up to this distance.
            </summary>
        </member>
        <member name="M:PathPainterAPI.Painter.SmoothPath(System.Boolean)">
            <summary>
            Option passed to the Path Painter API to enable/disable path smoothing.
            </summary>
        </member>
        <member name="T:PathPainterAPI.PaintOption">
            <summary>
            Class internally used to pass Paint options to Path Painter API functions. You don't use these directly, but construct them 
            with the control functions in the PathPainterAPI class.
            </summary>
        </member>
        <member name="T:PathPainterAPI.PaintOption.PaintOptionType">
            <summary>
            The type of Paint Options.
            </summary>
        </member>
        <member name="P:PathPainterAPI.PaintOption.Type">
            <summary>
            The type of the Paint Option.
            </summary>
        </member>
        <member name="M:PathPainterAPI.PaintOption.#ctor(PathPainterAPI.PaintOption.PaintOptionType,System.Object)">
            <summary>
            New option.
            </summary>
        </member>
        <member name="M:PathPainterAPI.PaintOption.ApplyOptions(PathPainterAPI.Painter,PathPainterAPI.PaintOption[])">
            <summary>
            Applies the options to the API
            </summary>
        </member>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <!-- Badly formed XML comment ignored for member "M:Haven.PathPainter.IPPTile.SmoothAffected(System.Int32)" -->
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <!-- Badly formed XML comment ignored for member "M:Haven.PathPainter.PPTile.SmoothAffected(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Haven.PathPainter.PPTile.SmoothRect(UnityEngine.Vector2Int,Haven.PathPainter.GridMap,Haven.PathPainter.GridMap,Haven.PathPainter.GridMap,Haven.PathPainter.SmartHeightmap,System.Int32)" -->
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <!-- Badly formed XML comment ignored for member "M:Haven.PathPainter.TerrainDataTile.Changed" -->
        
        
        
        
        
        
        
        
        
        
        
        
        
        <!-- Badly formed XML comment ignored for member "M:Haven.PathPainter.TerrainDataTileHole.Changed" -->
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <!-- Badly formed XML comment ignored for member "T:Haven.PathPainter.TreePainter" -->
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    </members>
</doc>